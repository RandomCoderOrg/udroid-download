name: Build and Release
on:
  schedule: [{cron: "1 1 1 * *"}]
  workflow_dispatch: { }
  push:
    branches:
      - main
      
jobs:
  suite-build:
    strategy:
      fail-fast: false
      matrix:
        suite: [ jammy, focal, kinetic, lunar ]
        variant: [ raw, lxqtRaw, kdeRaw, gnomeRaw, mateRaw ]
        architecture: [ armhf ] # arm64, amd64 ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2

      - name: ‚§µÔ∏è Install Dependencies
        run: sudo apt-get update; sudo apt-get install git build-essential binfmt-support qemu-user-static debootstrap -y
      
      - name: üì• Download Submodules
        run: |
          git submodule init
          git submodule update
          
      - name: üõ†Ô∏è Build ${{ matrix.suite }}-${{ matrix.variant }}-${{ matrix.architecture }}
        run: sudo bash build.sh -s ${{ matrix.suite }} -v ${{ matrix.variant }} -a ${{ matrix.architecture }}
       
      - name: ‚¨ÜÔ∏è Upload Tarballs
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.suite }}-${{ matrix.architecture }}-tarballs
          path: fs-cook/out/${{ matrix.suite }}-${{ matrix.variant }}-${{ matrix.architecture }}.tar.gz
          
  create-release:
    runs-on: ubuntu-latest
    
    if: ${{ always() }}
    needs: suite-build
    
    steps:
      - uses: actions/checkout@v3
      
      - name: üì• Download All Tarballs
        uses: actions/download-artifact@v3
        
      - name: Extract Tarballs inside Archive
        run: |
          ls *-*/*.tar.gz
        
      - name: List Tarballs
        run: |
          ls -a
      
      - name: üè∑ Generate Release Tag
        run: |
          # udroid-on-android latest tag
          udroid_version=$(
               git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
               https://github.com/RandomCoderOrg/ubuntu-on-android \
               | tail -n1 | cut -d / -f 3 | cut -d v -f 2-
          )
          
          # udroid-download version
          udroid_download=$(
              git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
               https://github.com/RandomCoderOrg/udroid-download \
               | tail -n1 | cut -d / -f 3
          )

          # export version to github environment
          echo "VERSIONTAG=V${udroid_version}${BUILD_TYPE}R$((${udroid_download: -1} + 1))" >> "$GITHUB_ENV"

      - name: üìù Generate Release Notes
        run: sudo bash /home/runner/work/udroid-download/udroid-download/.github/scripts/generate-release-notes.sh
      
      - name: ‚¨ÜÔ∏è Upload Suite Tarballs
        uses: softprops/action-gh-release@v1
        with:
          body_path: release.md
          token: ${{ secrets.RELEASE_TOKEN }}
          tag_name: ${{ env.VERSIONTAG }}
          name: ${{ env.VERSIONTAG }}
          body_path: release.md
          draft: false
          prerelease: false
          with: |
            *-*/*.tar.gz
      
      - name: ‚öôÔ∏è Update distro-data.json
        run: |
          sudo apt-get install python3 -y
          sudo python3 gen_data/gen-update-json.py --release-tag ${{ env.VERSIONTAG }}
          set +e
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add distro-data.json
          git commit -m "AUTO: update distro-data.json"
          git push
          set -e