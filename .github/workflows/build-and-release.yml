name: Build and Release
on:
  schedule: [{cron: "1 1 1 * *"}]
  workflow_dispatch: { }
  push:
    branches:
      - main
    
jobs:
  suite-build:
    runs-on: ubuntu-latest # buildjet-4vcpu-ubuntu-2204
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        suite: [ jammy, focal, kinetic, lunar ]
        variant: [ raw, lxqtRaw, kdeRaw, gnomeRaw, mateRaw ]
        architecture: [ armhf ] #, arm64 ] #, amd64 ]
    
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      
      - name: ✅ Pre-Build Checks
        run: |
          if [ -d "suites/${{ matrix.suite }}" ]; then
            if [ ! -d "suites/${{ matrix.suite }}/${{ matrix.variant }}" ]; then
              echo "Error: ${{ matrix.variant }} is not supported for ${{ matrix.suite }}!"
              exit 1
            fi
          else
            echo "Error: ${{ matrix.suite }} is not a valid suite!"
            exit 1
          fi
          
      - name: ⤵️ Install Submodules & 📥 Download Dependencies
        run: sudo bash setup.sh
      
      - name: 🛠️ Build ${{ matrix.suite }}-${{ matrix.variant }}-${{ matrix.architecture }}
        run: sudo bash build.sh -s ${{ matrix.suite }} -v ${{ matrix.variant }} -a ${{ matrix.architecture }}
      
      - name: ⬆️ Upload Tarballs
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.suite }}-${{ matrix.architecture }}-tarballs
          path: fs-cook/out/${{ matrix.suite }}-${{ matrix.variant }}-${{ matrix.architecture }}.tar.gz
      
  create-release:
    runs-on: ubuntu-latest
    
    if: ${{ always() }}
    needs: suite-build
    
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - name: 📥 Download All Tarballs
        uses: actions/download-artifact@v3
      
      # Debug Purposes
      - name: List Tarballs
        run: |
          ls *-*/*.tar.gz
      
      - name: 🏷 Generate Release Tag
        run: |
          udroid_version=$(git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
              https://github.com/RandomCoderOrg/ubuntu-on-android \
              | tail -n1 | cut -d / -f 3 | cut -d v -f 2- )
          
          udroid_download=$(
            git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
              https://github.com/RandomCoderOrg/udroid-download \
              | tail -n1 | cut -d / -f 3
            )
          
          echo "VERSIONTAG=V${udroid_version}${BUILD_TYPE}R$((${udroid_download: -2} + 1))" >> $GITHUB_ENV

      - name: 📝 Generate Release Notes
        run: sudo bash /home/runner/work/udroid-download/udroid-download/.github/scripts/generate-release-notes.sh
      
      - name: ⬆️ Upload Suite Tarballs
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          tag: ${{ env.VERSIONTAG }}
          name: ${{ env.VERSIONTAG }}
          bodyFile: release.md
          draft: false
          prerelease: false
          artifacts: '*-*-tarballs/*.tar.gz'
          makeLatest: true
          
      - name: ⚙️ Generate New distro-data.json
        run: sudo python3 gen_data/gen-update-json.py --release-tag ${{ env.VERSIONTAG }}
      
      - name: ⚙️ Update distro-data.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          skip_fetch: false
          skip_checkout: false
          commit_message: 'AUTO: update distro-data.json'
          file_pattern: distro-data.json
