name: Build and Release
on:
  schedule: [{cron: "1 1 1 * *"}]
  workflow_dispatch: { }
  push:
    branches:
      - main
      
jobs:
  building-matrix:
    strategy:
      fail-fast: false
      matrix:
        suite: [ jammy, focal, kinetic, lunar ]
        variant: [ raw, lxqt, kde, gnome, mate ]
        architecture: [ arm64, armhf ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v2

      - name: Setup Dependencies
        run: sudo apt-get update; sudo apt-get install git build-essential binfmt-support qemu-user-static debootstrap -y
      
      - name: checkout submoudles
        run: |
          git submodule init
          git submodule update
          
      - name: Build ${{ matrix.suite }}-${{ matrix.variant }}
        if: matrix.variant == "raw"
        run: |
          sudo bash build.sh -s ${{ matrix.suite }} -v raw -a ${{ matrix.architecture }}
        
          
      - name: Build ${{ matrix.suite }}-${{ matrix.variant }}Raw
        if: matrix.variant != "raw"
        run: |
          sudo bash build.sh -s ${{ matrix.suite }} -v ${{ matrix.variant }}Raw -a ${{ matrix.architecture }}
       
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.suite }}-tarballs
          path: fs-cook/out/*.tar.gz
          

      - name: ⬇️ Download ${{ matrix.suite }} artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.suite }}-tarballs
      
      - name: Compute Release Tag
        run: |
          udroid_version=$(git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
            https://github.com/RandomCoderOrg/ubuntu-on-android \
            | tail -n1 | cut -d / -f 3 | cut -d v -f 2-
          )
          
          udroid_download=$(
            git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' \
            https://github.com/RandomCoderOrg/udroid-download \
            | tail -n1 | cut -d / -f 3
          )
          
          echo "VERSIONTAG=V${udroid_version}${BUILD_TYPE}R$((${udroid_download: -2} + 1))" >> $GITHUB_ENV
      
      - name: Generate Release Notes
        run: sudo bash /home/runner/work/udroid-download/udroid-download/.github/scripts/generate-release-notes.sh
      
      - name: Pre Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSIONTAG }}
          release_name: ${{ env.VERSIONTAG }}
          body_path: release.md
          draft: false
          prerelease: false
            
            
      - name: ⬆️ Create Release for ${{ matrix.suite }}
        run: |
          set -x
          tag_name="${VERSIONTAG}"
          hub release edit -F release.md "-a ${{ matrix.suite }}-tarballs -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}